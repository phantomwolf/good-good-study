计算包含连续元素的最长子数组的长度
=============================================
给定一个不含重复元素的数组，找出最长的子数组，使得其元素排序后是连续的整数。

例如，对于arr[] = {8, 10, 12, 11}，满足条件的最长子数组为{10, 12, 11}，其元素排序后为三个连续的整数：10, 11, 12。


如何证明一个subarray中元素连续？
-------------------------------------
结论：设子数组arr[i..j]中的最大值为max，最小值为min。当max - min = j - i时，子数组中的元素可以排列为连续的整数。

证明：arr[i..j]中共有j - i + 1个数；[min, max]中共有max - min + 1个数。因max - min = j - i，所以arr[i..j]与[min, max]的元素数量相同。因为数组arr[]中无重复元素，所以arr[i..j]与[min, max]必然是一一对应的，即arr[i..j]中元素可以排列为连续的整数。

如何找出所有满足条件的subarray？
-------------------------------------
除了双层循环，遍历所有subarray以外，似乎没有更好的办法。

重复元素
------------------------------------
若数组中允许重复元素，可以用set探测它们。如果子数组中出现了重复元素，那么其元素必然不能排列成连续的整数，故此时可直接跳过本轮循环。
