统计数组中总和小于sum的三元组的数量
=====================================================
给定一个没有重复元素的数组，和一个sum值。统计数组中总和小于sum的三元组的数量。

例如对于数组nums[] = {-2, 0, 1, 3}，sum = 2，共有2个三元组的总和小于sum：(-2, 0, 1)和(-2, 0, 3) 


思路
---------------------------------
本题类似3Sum问题，但要求的不是和等于sum的3个数，而是所有和小于sum的三元组的数量。但解法是类似的。

首先将数组增序排序，时间复杂度O(nlogn)。

之后，设置i、j、k三个下标。首先将i固定，然后令j和k分别为余下元素的两端。接下来，若nums[i] + nums[j] + nums[k] >= sum，那么我们需要将k减小，直到nums[i] + nums[j] + nums[k] < sum。由于nums[]数组增序排序，所以这时k可以取(j, k]之间的任意值，满足nums[i] + nums[j] + nums[k] < sum。之后再更新j，再次计算。
