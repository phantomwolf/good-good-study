从两个有序数组中轮流取元素，计算所有可能的有序数组
===================================================================
给定两个有序数组A和B，轮流从A和B中取元素，最后生成一个新的有序数组。数组的最后一个元素应当是B中的元素。计算所有这样的数组。


思路
---------------------------------------
设置以下数组::

    void alternate_elements(vector<int> A, size_t i,
                            vector<int> B, size_t j,
                            char flag, vector<int> &arr,
                            vector<vector<int>> &res);

i表示A[i..A.size()-1]范围内可以取，j表示B[j..B.size()-1]范围内可以取。flag = 0表示轮到从A中取元素，flag = 1表示轮到B。arr为目前为止生成的数组。res则存储所有结果。
