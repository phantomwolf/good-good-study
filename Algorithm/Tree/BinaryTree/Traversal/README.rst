二叉树树的遍历
============================
后序遍历(一个栈)
---------------------
Postorder traversal。只用一个栈的后序遍历。算法要点在于，将一个结点压入栈之前，将其右孩子压入栈(如果有的话)。这样，结点与其右孩子同时位于栈中。当结点出栈时，如果其右孩子在栈顶，说明这是我们第一次访问到该结点，其右子树尚未访问过，于是我们将该结点再次压入栈中，暂时不访问它，而是访问其右子树。

Morris遍历
---------------------
Morris遍历既不需要栈的辅助，也不需要递归。过程如下：

用current变量指代当前结点，令current = root，当current不为NULL时：如果current没有左孩子，就访问它，并向右前进；如果current有左孩子，就将current设置为它的左子树里最右结点的右孩子，然后向左前进。

尽管树被修改，但在遍历过程中会进行恢复。设一个有左孩子的结点为parent，其左子树最右结点为pre，那么在遍历过程中会经过parent两次：第一次，我们将parent设为了pre的右孩子；第二次，我们访问完了pre，接下来要访问parent，顺便去掉pre到parent的链接。
