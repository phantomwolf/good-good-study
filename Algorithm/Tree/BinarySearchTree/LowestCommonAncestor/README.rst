Lowest Common Ancestor in a Binary Search Tree
================================================================
Lowest Common Ancestor(LCA)最低公共祖先：从结点n1和n2分别向上移动，第一个相交的结点。

解答
-------------------------------------------
假设结点n1和n2(n1 < n2)的LCA为结点a，那么n1和n2必定分别属于a的左子树和右子树。由于本题说的是二叉搜索树，由二叉搜索树的性质可知：n1 < a < n2。

那么a的祖先结点如何呢？假设a的某个祖先结点为p，若a属于p的左子树，那么n1、n2均属于p的左子树，有n1 < n2 < p；若a属于p的右子树，那么n1、n2均属于p的右子树，有p < n1 < n2。可见，a以上的结点，要么同时大于n1、n2，要么同时小于n1、n2。从上往下数，a是第一个位于n1和n2之间的数。

因此，我们可以从根开始搜索，若n1 < n2 < node，那就向左前进；若node < n1 < n2，那就向右前进。若遇到n1 < node < n2，那么node就是我们要找的LCA。
