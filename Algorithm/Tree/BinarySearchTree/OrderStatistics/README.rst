Order Statistics in BST
======================================
下面介绍如何在二叉搜索树中做顺序统计（求第k小的元素），有的需要对二叉搜索树进行修改，有的不需要。

中序遍历
-------------------
中序遍历的结果是有序的，所以我们只要对二叉树进行中序遍历，第k个元素就是第k小的元素。时间复杂度：O(k)。空间复杂度：O(h)，主要是栈的空间。

Morris遍历
-------------------
使用Morris方法对树进行中序遍历，访问的第k个元素就是第k小的元素。由于Morris遍历只需要常数级别的额外空间，所以此方法空间复杂度为O(1)。

时间复杂度：O(n)。空间复杂度：O(1)。

改进二叉树
-------------------
我们对二叉搜索树进行改进，为每个node保存一个rank值，表示该结点的左子树里结点的数量（即小于该结点值的结点数目，因为一个结点的左子树上任何结点的值都小于该结点）。如果rank + 1 == k，那么我们就找到了第k小的数；如果rank + 1 > k，说明当前结点的值比目标要大，需要向左前进；如果rank + 1 < k，说明当前结点的值比目标小，需要向右前进。

时间复杂度：O(h)，h为树的高度。空间复杂度：O(n)
