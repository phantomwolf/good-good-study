寻找下一个稀疏(Sparse)数
===========================================
稀疏：若一个数的二进制表达形式中，没有两个连续的1，那就说这个数是稀疏(Sparse)的。

给定一个整数x，求下一个稀疏数。


思路
-----------------------------------
先来看一个简单的例子，设x = 7，那么接下来几个数的二进制表示形式为::

    7: 0000 0111
    8: 0000 1000

7的下一个稀疏数为8。观察二进制表示形式可以发现，按照从左到右的顺序，遇到相邻的1后，我们可以将最后2个相邻的1左边的0置为1，并将其右边全部置为0。继续向左扫描，直到没有相邻的1为止。这样得出的结果肯定大于原来的数，且一定是稀疏的。而且，显然也不会错过正确的结果。

具体该如何实现呢？根据上述算法流程可知，我们需要找到模式011，于是我们需要get_mask，初始值为7(0000 0111)，x & get_mask即可获取连续的3个bit；要判断上一部获取的3个bit是不是011，还需要一个expected变量，初始值3(0000 0011)，与上一部获取的3个bit的值进行比较即可；最后，还需要一个能把需要的位置为0的变量set_mask，初始值0xFFFFFFFF << 2，x & set_mask即可将那些位置为0。此外，不要忘了把011中的0置为1，用x | get_mask即可做到。
