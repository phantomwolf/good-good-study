Swap all odd and even bits
===================================================
给定一个无符号整数num，将其奇数bit位和偶数bit位交换(bit位从最低位开始数)。例如，对于23(00010111)，其奇偶位交换后为43(00101011)。每个偶数bit都与其右边相邻的bit交换；每个奇数bit都与其左边相邻的bit交换。

思路
-------------------------------------------
将num右移1位，其偶数bit就会处于其右边相邻的奇数bit上；将num左移1位，其奇数bit就会处于其左边相邻的bit上。我们需要想办法计算出2个数：只取出num的奇数位(偶数位置0)，再左移一下；只取出num的偶数位(奇数位置0)，再右移一下。最后将这两个数执行或运算(|)，即可获得正确结果。

设置一个特殊的变量0xAAAA AAAA，即10101010 10101010 10101010 10101010。让num与其进行与运算(&)，即可得到num的偶数位(奇数位为0)。之后再右移一位。

设置一个特殊的变量0x5555 5555，即01010101 01010101 01010101 01010101。让num与其进行与运算(&)，即可得到num的奇数位(偶数位为0)。之后再左移一位。

将以上两者进行或运算(|)，即可将结果合并起来::

    result = ((num & 0xAAAAAAAA) >> 1) | ((num & 0x55555555) << 1)
