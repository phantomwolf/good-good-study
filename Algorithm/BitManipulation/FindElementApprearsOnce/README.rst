找出只出现一次的元素
==============================================
数组中有很多元素，其中只有一个元素，出现次数与其他元素不一样。请找出这个元素。本题有很多变种。

变种1
-------------------------------------
数组无序。除了一个元素只出现1次以外，其他元素均在数组中出现2次。

思路
+++++++++++++++++++++
两个相同的数进行XOR操作，结果为0。将数组中所有元素进行XOR操作，出现偶数次的元素会被抵消，结果相当于只将出现奇数次的数做XOR操作。

由于只有一个数出现了1次，其他都出现了2次，所以将所有元素XOR，结果就是那个特殊的数。

变种2
-------------------------------------
数组有序。除了一个元素只出现1次以外，其他元素均在数组中出现2次。

思路
+++++++++++++++++++++
既然数组有序，那么相同的数必然是相邻的。采用二分法，每次探测mid = (l + r)位置的数，若它跟左右的数都不相等，那我们就找到了那个特殊的元素；否则，根据nums[mid]在相同的2个数中所处的位置，来判断特殊元素在左边还是右边：设数组下标从0开始，若nums[mid]与左边的数相等，nums[mid]位于两个相同数的右边，说明特殊元素在mid的右边，否则说明在左边。

变种3
-------------------------------------
有一个长度为n的数组，数组中元素的取值范围是[1, n+1]，且每个元素都不相同。这意味着，[1, n+1]中必然有一个数没有在数组中出现。找出这个没有出现的数。

思路
+++++++++++++++++++++
与第一题不同之处，在于每个元素都出现了1次，而要找的特殊元素没出现。

设数组中未出现的元素为k，那么数组中的元素为：1, 2, ..., k-1, k+1, ..., n+1。数组的下标是：0, 1, 2, ..., n-1，将它们全部加1后为：1, 2, ..., n。可见数组的下标与数组中元素高度重合，因此可以将一个下标视为该元素“出现”了1次，从而将问题转化为变种1。

需要注意的是，数组下标中没有n+1，所以我们需要人为地添加一个n+1。

变种4
-------------------------------------
给定一个数组，除一个元素只出现1次以外，其他元素均出现3次。请找出那个只出现1次的元素。要求时间复杂度为O(n)，空间复杂度O(1)。

思路
+++++++++++++++++++++
有个较慢的方法是将数组排序，然后用二分法。时间复杂度O(nlogn + logn)，空间复杂度O(1)。还可以用哈希表(map数据结构)，统计每个元素的数量。时间复杂度O(n)，空间复杂度O(n)。这些算法都不满足要求。

本题不能简单地使用XOR操作，因为所有元素都出现了奇数次。

除了特殊元素以外，每个元素都出现了3次。所以如果不考虑特殊元素，每个bit位上，1出现的次数肯定是3的倍数。我们参考取模运算mod，统计每个bit上1出现的次数，每出现3次就归0。这样，出现了3次的那些数的1 bit都会被归0，而特殊元素只出现了一次，其所有1 bit都将被保留。如果我们能实现这个基于bit的mod操作，那么将所有数执行这个操作，最后剩下的就是特殊元素。

具体解法：设置ones、twos两个变量。循环开始时，令twos包含出现2次和3次的bit，令ones包含出现1次和3次的bit。那么ones与twos共有的bit，就是出现3次的bit。将出现3次的bit从ones和twos中去掉，最后ones仅包含出现1次的bit，twos仅包含出现2次的bit
