Sum of bit differences among all pairs
============================================================
给定一个存有n个整数的数组，对所有可能的序偶，计算出两个元素的不同bit的数量。求所有序偶不同bit的总和。例如，2为010，7为111，有两个bit不同。

注意：(1, 2)与(2, 1)算两个不同的序偶；同样的元素可以重复使用，例如给定数组{1, 2}，(2, 2)这样的序偶是合法的。


思路
--------------------------------------------
简单的算法，是用双层循环，每次从数组中选出2个数，组成一个序偶，并计算两个元素之间不同的bit的数目。计算2个数的时间复杂度为常数，因此本算法时间复杂度为O(n^2)。

一个更有效的方法，是从bit的角度来看问题。假设数组中共有3个元素：{1, 3, 5}，将所有元素写成二进制(前面的bit三个数都是0，所以没有写出来)::

    1 = 001
    3 = 011
    5 = 101

第一个bit位上，1和3为0，5为1，共有2个0，1个1。那么，共有多少种组合，使得两个树在这一个bit上不同呢？从2个0中选出一个0，从1个1中选出一个1，组成一个序偶，有2 * 1种可能性。再将顺序颠倒一下，又多了一倍的组合。综上，共有(2 * 1) * 2 = 4种可能性。也就是说，在这个bit上，共有4个序偶，可以让该bit不同。

用同样的方法计算第二个和第三个bit，最终结果相加，得到::

    (2 * 1 + 2 * 1 + 0) * 2 = 8

这就是我们要求的结果。
