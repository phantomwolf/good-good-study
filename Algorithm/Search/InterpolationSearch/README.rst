Interpolation Search
========================================================
本算法与二分查找相似，但是要求数组元素分布均匀(元素递增的幅度比较平稳)。

二分查找每次都取中间的元素mid，与key进行对比。但是在本算法中，数组元素分布均匀，所以大致可以猜到目标元素分布的大概位置。比如若key比较接近当前搜索范围的右边界right，那么pivot的取值自然也应该更靠近右边。每次搜索的位置为::

    pivot = left + [(key - arr[left]) * (right - left) / (arr[right] - arr[left])]

其余的部分都和二分查找相同。

与二分查找的对比
-----------------------------------------
对于分布均匀的数组，Interpolation Search的时间复杂度能达到O(log(logn))级别，而二分法是O(logn)。但如果数组并未均匀分布，最坏情况下Interpolation Search的时间复杂度会退化为O(n)。
