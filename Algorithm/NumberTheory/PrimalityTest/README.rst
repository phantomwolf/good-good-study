Primality Test
=======================================
给定一个正整数n，测试它是否为质数。质数就是不能被任何大于1的数整除的数。


简单方法
----------------------------
穷举2到sqrt(n)的数，测试n是否能被它们整除。

为什么到sqrt(n)为止？因为当我们测试到sqrt(n)时，表明小于sqrt(n)的数都不能被n整除。假如sqrt(n)能被n整除，那么那个数一定是sqrt(n)，因为sqrt(n)乘以任何大于sqrt(n)的数，结果都比n大，是不可能等于n的。

同理，从sqrt(n) + 1开始，无法找到任何可选用的数x，使得(sqrt(n) + 1) * x <= n。因此，测试到sqrt(n)就够了。


费马测试法
----------------------------
费马小定理：若p是质数，那么对于任何整数a，a^p - a必然是p的整数倍，即(a^p - a) mod p = 0，亦即a^p mod p = a。例如，若a = 2，p = 7，2^7 = 128，128 - 2 = 7 * 18，128 mod 7 = 2。

若a不可被p整除，费马小定理等同于：a^(p-1) - 1是p的整数倍，即(a^(p-1) - 1) mod p = 0，亦即a^(p-1) mod p = 1。例如，若a = 2，p = 7，那么2^6 = 64，64 - 1 = 63是7的整数倍，64 mod 7 = 1。

算法过程
~~~~~~~~~~~~~~~

输入：

- n: 要测试是否为质数的整数，n > 3。
- k: 一个参数，用于决定要测试多少次。

输出：若测试结果表明n为合数，那么返回false；若在k次测试中，都没能判定n为合数，那么n很可能是质数，返回true。

过程：将以下步骤重复k次

1. 从[2, n-2]范围内随机选取一个数
2. 若a^(n-1) mod n不等于1，那么返回false，n是合数。

若重复k次后，依然没有返回false，则n很可能是质数，返回true。
