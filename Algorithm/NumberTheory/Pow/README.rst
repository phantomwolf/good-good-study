O(logy)的pow(x,y)函数
======================================================
给定整数x和正整数y，写一个符合下列条件的函数来计算x^y：

- 时间复杂度为O(logy)
- 空间复杂度O(1)


思路
----------------------------------
我们来看一个实例，设x=3, y=5，那么pow(x, y) = x * x * x * x * x，即5个x相乘，一共执行了4次乘法运算。要提高算法性能，就要减少乘法的次数。我们设置一个变量res = x，代表最终结果。

首先，res = res * x，即res == x^2。接下来，我们用res = res * res，现在res == x^4。最后，res = res * x，res == x^5。只用了3次乘法，就算出了结果。

所以，加快性能的方法，就是缓存中间结果，并多次使用它来相乘。


递归版
----------------------------------
设power(x, y)表示x^y，若y为偶数，那么基础情况下：当x为0时，power(x, y) = 0；当x不为0，y为0的时候，power(x, y) = 1。一般情况下::

    power(x, y) = power(x, y/2) * power(x, y/2)

若y为奇数，那么::

    power(x, y) = x * power(x, y/2) * power(x, y/2)

同理，若y/2是偶数，那么::

    power(x, y/2) = power(x, y/4) * power(x, y/4)

若y/2是奇数，那么::

    power(x, y/2) = x * power(x, y/4) * power(x, y/4)

我们用变量tmp来存储power(x, y/2)，这样同样的结果就不用计算两次了::

    tmp = power(x, y/2)
