Longest Common Subsequence
===============================================================
最长公共自序列(Longest Common Subsequence, LCS)，是一个在一个序列集合中（通常为两个序列）用来查找所有序列中最长子序列的问题。这与查找最长公共子字符串的问题不同的地方是：子序列不需要在原序列中占用连续的位置 。

例子：ABCDGH与AEDFHR的LCS为ADH；AGGTAB与GXTXAYB的LCS为GTAB。

最优子结构
--------------------------------------------
设2个输入序列分别为X[0..m-1]和Y[0..n-1]，长度分别为m和n。令L(X[0..m-1], Y[0..n-1])为两者的LCS。以下是L(X[0..m-1], Y[0..n-1])的递归定义::

    若X[m-1] == Y[n-1]，那么L(X[0..m-1], Y[0..n-1]) = L(X[0..m-2], Y[0..n-2]) + 1
    若X[m-1] != Y[n-1]，那么L(X[0..m-1], Y[0..n-1]) = max(L(X[0..m-1], Y[0..n-2]), L(X[0..m-2], Y[0..n-1]))

正向思考::

    若X[m-1] == Y[n-1]，那么我们可以通过将字符X[m-1]加入到LCS中，使其长度增加1,即L(X[0..m-1], Y[0..n-1]) = L(X[0..m-2], Y[0..n-2]) + 1

